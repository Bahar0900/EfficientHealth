/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package demo;

import static java.lang.Integer.max;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.table.DefaultTableModel;
import junit.framework.TestResult;

/**
 *
 * @author Administrator
 */


public class PatientDetails extends javax.swing.JFrame {

    /**
     * Creates new form PatientDetails
     */
    int ipatid;
    public PatientDetails() {
        initComponents();
         jScrollPane4.setVisible(false);
         jtable1.setVisible(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        textField1 = new customize.TextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rSTableMetro1 = new rojeru_san.complementos.RSTableMetro();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        rSDateChooser1 = new rojeru_san.componentes.RSDateChooser();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtable1 = new rojeru_san.complementos.RSTableMetro();
        rSButtonHover1 = new rojeru_san.complementos.RSButtonHover();
        jLabel26 = new javax.swing.JLabel();
        rSLabelImage1 = new rojerusan.RSLabelImage();
        floor = new javax.swing.JLabel();
        room_type = new javax.swing.JLabel();
        room_id = new javax.swing.JLabel();
        room_cost = new javax.swing.JLabel();
        Building = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, -1, 40));

        textField1.setLabelText("Patient ID");
        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });
        getContentPane().add(textField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 170, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.jpg"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 50, 50, 50));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Country");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 80, 20));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 350, 160, 20));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Patient Name");
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 80, 20));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 160, 20));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Age");
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 80, 20));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setOpaque(true);
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 160, 20));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Date");
        jLabel8.setOpaque(true);
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 470, 80, 30));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Email");
        jLabel10.setOpaque(true);
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 80, 20));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setOpaque(true);
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 160, 20));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Email");
        jLabel12.setOpaque(true);
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 80, 20));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setOpaque(true);
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 160, 20));

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setText("State");
        jLabel14.setOpaque(true);
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 80, 20));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setOpaque(true);
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 160, 20));

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setText("State");
        jLabel16.setOpaque(true);
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 80, 20));

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setOpaque(true);
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 160, 20));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel18.setText("Street");
        jLabel18.setOpaque(true);
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 80, 20));

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setOpaque(true);
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 320, 160, 20));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null}
            },
            new String [] {
                "Phone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 450, 250, 60));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null}
            },
            new String [] {
                "Symptoms"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable2);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 250, 60));

        jLabel20.setBackground(new java.awt.Color(44, 182, 218));
        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Patient History");
        jLabel20.setOpaque(true);
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 340, 30));

        rSTableMetro1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Test Name", "Test Result", "Date"
            }
        ));
        jScrollPane1.setViewportView(rSTableMetro1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 150, 340, 180));

        jLabel21.setBackground(new java.awt.Color(46, 185, 218));
        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Testing and Results");
        jLabel21.setOpaque(true);
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 340, 340, 40));

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel22.setText("Gender");
        jLabel22.setOpaque(true);
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 80, 20));

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setOpaque(true);
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 160, 20));

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setText("Test Name");
        jLabel24.setOpaque(true);
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 390, 80, 30));

        jLabel27.setBackground(new java.awt.Color(255, 255, 255));
        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel27.setText("Test Result");
        jLabel27.setOpaque(true);
        getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 430, 80, 30));

        rSDateChooser1.setPlaceholder("Date of Test");
        getContentPane().add(rSDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 470, 250, 30));

        jButton2.setBackground(new java.awt.Color(0, 153, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("ADD Data");
        jButton2.setOpaque(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 510, 190, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 390, 250, 30));

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 430, 250, 30));

        jCheckBox1.setBackground(new java.awt.Color(0, 204, 204));
        jCheckBox1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Assign To Room");
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 120, 180, 30));

        jtable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"0", "2000", "ICU", "Anatomy", "2"},
                {"1", "500", "Normal", "Physics", "3"},
                {"2", "1000", "ICU", "Chemistry", "1"},
                {"3", "1000", "ICU", "Chemistry", "2"},
                {"4", "500", "Normal", "Physics", "1"},
                {"5", "1000", "ICU", "Physics", "2"},
                {"6", "500", "Normal", "Anatomy", "1"},
                {"7", "1000", "ICU", "Phsyology", "1"},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Room ID", "Room Cost", "Room type", "Building", "Floor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtable1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jtable1);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 160, 460, 290));

        rSButtonHover1.setText("CONFIRM");
        rSButtonHover1.setColorHover(new java.awt.Color(0, 51, 204));
        rSButtonHover1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover1ActionPerformed(evt);
            }
        });
        getContentPane().add(rSButtonHover1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 470, 250, -1));
        getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 60, -1, -1));

        rSLabelImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/patientdetails (2).jpg"))); // NOI18N
        getContentPane().add(rSLabelImage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 540));

        floor.setText("floor");
        getContentPane().add(floor, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 60, -1, -1));

        room_type.setText("room_type");
        getContentPane().add(room_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 50, -1, 20));

        room_id.setText("r_id");
        getContentPane().add(room_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, 70, -1));

        room_cost.setText("room_cost");
        getContentPane().add(room_cost, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, 80, -1));

        Building.setText("Building");
        getContentPane().add(Building, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 70, 80, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            String Patid = textField1.getText();
            int patient_id = Integer.parseInt(Patid);
            ipatid = patient_id;
        // TODO add your handling code here:
            try {
                Connection con = (Connection) myconnection3.getConnection();
                PreparedStatement ps;
                ps = con.prepareStatement("SELECT Name, (DATEDIFF(CURDATE(), DATE_OF_BIRTH) / 365) AS AGE, Gender, Email, State, Street, Country FROM `patient` WHERE PatientId = ?;");
                ps.setInt(1, patient_id);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
//                    String id = rs.getString("Employeeid");
//                    String fst = rs.getString("First_Name");
//                    String sr = rs.getString("Sur_Name");
//                    String salary = rs.getString("Salary");
//                    String supervisorid = rs.getString("Supervisorid");
//                    String state = rs.getString("State");
//                    String street = rs.getString("Street");
//                    String country = rs.getString("Country");
                      jLabel5.setText(rs.getString("Name"));
                      jLabel7.setText("" + rs.getInt("AGE"));
                      jLabel23.setText(rs.getString("Gender"));
                      jLabel11.setText(rs.getString("Email"));
                      jLabel17.setText(rs.getString("State"));
                      jLabel19.setText(rs.getString("Street"));
                      jLabel3.setText(rs.getString("Country"));
         
                }
            } catch (SQLException ex) {
                System.out.println("Error1");
                //Logger.getLogger(seller_interface.class.getName()).log(Level.SEVERE, String.valueOf(id), ex);
            }
            
            
        DefaultTableModel table5 = (DefaultTableModel)jTable2.getModel();
        table5.setRowCount(0);
        try {
                Connection con = (Connection) myconnection3.getConnection();
                PreparedStatement ps;
                ps = con.prepareStatement("SELECT Diagnosis FROM `treatment` WHERE PatientId = ?;");
                ps.setInt(1, patient_id);
                ResultSet rs = ps.executeQuery();
                if(rs.next()) {
                   String d = rs.getString("Diagnosis");
                    
                    
                    
                    table5.addRow(new Object[]{d});
                }
            } catch (SQLException ex) {
                System.out.println("Error");
                //Logger.getLogger(seller_interface.class.getName()).log(Level.SEVERE, String.valueOf(id), ex);
            }
            

            
        DefaultTableModel table1 = (DefaultTableModel)jTable1.getModel();
        table1.setRowCount(0);
        try {
                Connection con = (Connection) myconnection3.getConnection();
                PreparedStatement ps;
                ps = con.prepareStatement("SELECT PhoneNumber FROM `patientphonenumber` WHERE PatientId = ?;");
                ps.setInt(1, patient_id);
                ResultSet rs = ps.executeQuery();
                if(rs.next()) {
                   String d = rs.getString("PhoneNumber");
                    
                    
                    
                    table1.addRow(new Object[]{d});
                }
            } catch (SQLException ex) {
                System.out.println("Error");
                //Logger.getLogger(seller_interface.class.getName()).log(Level.SEVERE, String.valueOf(id), ex);
            }
        DefaultTableModel table3 = (DefaultTableModel)rSTableMetro1.getModel();
        table3.setRowCount(0);
        try {
                Connection con = (Connection) myconnection3.getConnection();
                PreparedStatement ps;
                ps = con.prepareStatement("SELECT TestName, TestResult, Date FROM `log` WHERE PatientId = ?;");
                ps.setInt(1, patient_id);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    String t1 = rs.getString("TestName");
                    String t2 = rs.getString("TestResult");
                    String t3 = rs.getString("Date");
                    
                    
                    table3.addRow(new Object[]{t1, t2, t3});
                }
            } catch (SQLException ex) {
                System.out.println("Error");
                //Logger.getLogger(seller_interface.class.getName()).log(Level.SEVERE, String.valueOf(id), ex);
            }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed

    }//GEN-LAST:event_textField1ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        new doctor().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jtable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtable1MouseClicked
        // TODO add your handling code here:
                int row=jtable1.getSelectedRow();
        String c = (String) jtable1.getValueAt(jtable1.getSelectedRow() , 0);
        room_id.setText(c);
        
        
        String c2 = (String) jtable1.getValueAt(jtable1.getSelectedRow() , 1);
        room_cost.setText(c2);
//        
        String c3 = (String) jtable1.getValueAt(jtable1.getSelectedRow() , 2);
        room_type.setText(c3);
//        
        String c4 = (String) jtable1.getValueAt(jtable1.getSelectedRow() , 3);
        Building.setText(c4);
//        
        String c5 = (String) jtable1.getValueAt(jtable1.getSelectedRow() , 4);
        floor.setText(c5);
//        
//        c = (String) jtable1.getValueAt(jtable1.getSelectedRow() , 5);
//       
//        c = (String) jtable1.getValueAt(jtable1.getSelectedRow() , 6);
//        
//        c = (String) jtable1.getValueAt(jtable1.getSelectedRow() , 7);
        

    }//GEN-LAST:event_jtable1MouseClicked

    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked
        // TODO add your handling code here:
        if(jCheckBox1.isSelected()){
            jScrollPane4.setVisible(true);
            jtable1.setVisible(true);
        }
        else{
                jScrollPane4.setVisible(false);
              jtable1.setVisible(false);
        }
    }//GEN-LAST:event_jCheckBox1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
            LocalDate currentDate = LocalDate.now();
        // Define the desired date format
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        // Format the current date using the defined format
            String Date = currentDate.format(formatter);
            String test_name = jTextField1.getText();
            String test_result = jTextField2.getText();
//            rSDateChooser1.setText(formattedDate);
            try {
                Connection con = (Connection) myconnection3.getConnection();
                PreparedStatement ps;
                ps = con.prepareStatement("INSERT INTO `log`(`PatientId`, `TestName`, `TestResult`, `Date`) VALUES ( ? , ? , ? , ?);");
                ps.setInt(1, ipatid);
                ps.setString(2, test_name);
                ps.setString(3, test_result);
                ps.setString(4, Date);
                ps.executeUpdate();
            } catch (SQLException ex) {
                System.out.println("Error2");
                //Logger.getLogger(seller_interface.class.getName()).log(Level.SEVERE, String.valueOf(id), ex);
            }
                DefaultTableModel table3 = (DefaultTableModel)rSTableMetro1.getModel();
        table3.setRowCount(0);
        try {
                Connection con = (Connection) myconnection3.getConnection();
                PreparedStatement ps;
                ps = con.prepareStatement("SELECT TestName, TestResult, Date FROM `log` WHERE PatientId = ?;");
                ps.setInt(1, ipatid);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    String t1 = rs.getString("TestName");
                    String t2 = rs.getString("TestResult");
                    String t3 = rs.getString("Date");
                    
                    
                    table3.addRow(new Object[]{t1, t2, t3});
                }
            } catch (SQLException ex) {
                System.out.println("Error");
                //Logger.getLogger(seller_interface.class.getName()).log(Level.SEVERE, String.valueOf(id), ex);
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void rSButtonHover1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover1ActionPerformed
        // TODO add your handling code here:
        
        String Patid = textField1.getText();
        int patient_id = Integer.parseInt(Patid);
        String r__id = room_id.getText();
            int r_id = Integer.parseInt(r__id); 
            String r_type = room_type.getText();
            String r__cost = room_cost.getText();
            int r_cost = Integer.parseInt(r__cost);
            String b = Building.getText();
            String fl = floor.getText();
        int f = Integer.parseInt(fl);
            
                        try {
                Connection con = (Connection) myconnection3.getConnection();
                PreparedStatement ps;
                ps = con.prepareStatement("INSERT INTO `room`(`RoomId`, `PatientId`, `RoomCost`, `RoomType`, `Building`, `Floor`) VALUES ( ?, ?, ?, ?, ?, ?)");
                ps.setInt(1, r_id);
                ps.setInt(2, patient_id);
                ps.setInt(3, r_cost);
                ps.setString(4, r_type);
                ps.setString(5, b);
                ps.setInt(6, f);
                ps.executeUpdate();
            } catch (SQLException ex) {
                System.out.println(r_id);
                System.out.println(" ");
                System.out.println(patient_id);
                System.out.println(" ");
                System.out.println(r_cost);
                System.out.println(" ");
                System.out.println(r_type);
                //Logger.getLogger(seller_interface.class.getName()).log(Level.SEVERE, String.valueOf(id), ex);
            }
        try {
                Connection con = (Connection) myconnection3.getConnection();
                PreparedStatement ps;
                ps = con.prepareStatement("INSERT INTO `patientbill`(`BillId`, `BillAmount`) VALUES (?,?)");
                ps.setInt(1, patient_id);
                ps.setInt(2, 1200);
//                ps.setInt(3, patient_id);
                ps.executeUpdate();
            } catch (SQLException ex) {
                System.out.println("Error2888");
                //Logger.getLogger(seller_interface.class.getName()).log(Level.SEVERE, String.valueOf(id), ex);
            }
            try {
                Connection con = (Connection) myconnection3.getConnection();
                PreparedStatement ps;
                ps = con.prepareStatement("INSERT INTO `servicegiven`(`ServiceId`, `PatientId`, `BillId`) VALUES (?,?,?);");
                ps.setInt(2, patient_id);
                ps.setInt(1, 2);
                ps.setInt(3, patient_id);
                ps.executeUpdate();
            } catch (SQLException ex) {
                System.out.println("Error2888");
                //Logger.getLogger(seller_interface.class.getName()).log(Level.SEVERE, String.valueOf(id), ex);
            }
            
    }//GEN-LAST:event_rSButtonHover1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Building;
    private javax.swing.JLabel floor;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private rojeru_san.complementos.RSTableMetro jtable1;
    private rojeru_san.complementos.RSButtonHover rSButtonHover1;
    private rojeru_san.componentes.RSDateChooser rSDateChooser1;
    private rojerusan.RSLabelImage rSLabelImage1;
    private rojeru_san.complementos.RSTableMetro rSTableMetro1;
    private javax.swing.JLabel room_cost;
    private javax.swing.JLabel room_id;
    private javax.swing.JLabel room_type;
    private customize.TextField textField1;
    // End of variables declaration//GEN-END:variables
}
